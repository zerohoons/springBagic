<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:property-placeholder
		location="classpath:jdbc.properties" />

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.pwd}"></property>
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<property name="minIdle" value="${jdbc.minIdel}"></property>
	</bean>

	<bean id="factoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>

		<!-- resource에 있는 것들은 classpath:파일 로 위치를 지정하면 된다. -->
		<property name="mapperLocations" value="classpath:mapper.xml"></property>
	</bean>

	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="factoryBean"></constructor-arg>
	</bean>
	
	<!-- 트랜잭션 처리 : AOP (Namespaces 에서 aop와 tx체크)-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>	
	<!-- 롤백처 -->
	<tx:advice transaction-manager="transactionManager" id="txAdvice" >
		<tx:attributes>
			<!-- 메소드의 앞의 이름을 통일해야지 깔끔하고 작업이 줄어든다. -->
			<tx:method name="select*" read-only="true" rollback-for="Exception"/>
			<tx:method name="insert*" rollback-for="Exception"/>
			<tx:method name="update*" rollback-for="Exception"/>
			<tx:method name="delete*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 어노테이션 처리 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* com.ict.*..*Impl.*(..))" id="serviceMethod"/>
		<aop:advisor advice-ref="txAdvice" id="transactionAdvisor" pointcut-ref="serviceMethod"/>
	</aop:config>
	
	<!-- 내가 사용할 클래스 -->
	<!-- <bean id="dao" class="com.ict.dao.MyDAO" autowire="byName"></bean> -->
	<context:annotation-config />

	<!-- 지정 패키지 하위의 것들에 대해 전부 어노테이션 실행 -->
	<context:component-scan base-package="com.ict" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize" value="104857600"></property>
	</bean>
</beans>
